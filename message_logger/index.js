(function(g,t,C,l,M,m,E,f,c){"use strict";const{FormRow:p,FormSwitch:b,FormSwitchRow:x,FormSection:O,FormDivider:D,FormInput:v}=m.Forms,{ScrollView:A,View:o,Text:d}=m.General,i=t.stylesheet.createThemedStyleSheet({text:{color:E.semanticColors.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:t.constants.Fonts.PRIMARY_BOLD,fontSize:16},subText:{color:E.semanticColors.TEXT_POSITIVE,paddingLeft:"6%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:t.constants.Fonts.DISPLAY_NORMAL,fontSize:12}});let _=function(e){return e.toUpperCase()},R=[{id:"deletedMessageColor",title:"Customize Deleted Message Color ( DO NOT INCLUDE # )",type:"default",placeholder:"E40303"},{id:"deletedMessageColorBackground",title:"Customize Deleted Background Message Color ( DO NOT INCLUDE # )",type:"default",placeholder:"FF2C2F"},{id:"deletedMessage",title:"Customize Deleted Message",type:"default",placeholder:"This message is deleted"},{id:"editedMessage",title:"Customize Edited Separator",type:"default",placeholder:"`[ EDITED ]`"}];const y=[{id:"useBackgroundColor",default:!1,label:"Enable Background Color",subLabel:"Background Color for Deleted Message, similiar to Mention but Customizeable"}];let F=[{version:"v0.0.8",patch:["Added Customizeable Text Color for Deleted Messages.","Changed Deleted Message Patch to use Discord Built-in.","Removed Option to use DELETED, NormalEphemeral, DefaultAutomodEphemeral","Removed Ephemeral Custom Settings.","Removed Ephemeral Patch."]}];function I(){return C.useProxy(l.storage),t.React.createElement(A,null,t.React.createElement(o,{style:{marginTop:20}},t.React.createElement(o,{style:{marginTop:10}},t.React.createElement(d,{style:[i.text,i.optionText]},_("Customize")),t.React.createElement(o,{style:[i.subText]},R.map(function(e,a){return t.React.createElement(t.React.Fragment,null,t.React.createElement(v,{title:e.title,keyboardType:e.type,placeholder:e.placeholder,value:l.storage[e.id]??e.placeholder,onChange:function(s){return l.storage[e.id]=s.toString()}}),a!==R.length-1&&t.React.createElement(D,null))})),t.React.createElement(o,{style:[i.subText]},y.map(function(e,a){return t.React.createElement(t.React.Fragment,null,t.React.createElement(p,{label:e.label,subLabel:e.subLabel,leading:e.icon&&t.React.createElement(p.Icon,{source:M.getAssetIDByName(e.icon)}),trailing:"id"in e?t.React.createElement(b,{value:l.storage[e.id]??e.default,onValueChange:function(s){return l.storage[e.id]=s}}):void 0}),a!==y.length-1&&t.React.createElement(D,null))})),t.React.createElement(d,{style:[i.subText,i.optionText]},_("Reload the Plugin to Apply Color Change")),t.React.createElement(d,{style:[i.text,i.optionText]},"Changes"),F.map(function(e,a){return t.React.createElement(t.React.Fragment,null,t.React.createElement(d,{style:[i.text]},e.version||"Dev Version"),e.patch?.map(function(s){return t.React.createElement(t.React.Fragment,null,t.React.createElement(d,{style:[i.subText]},`- ${s}`))}))}))))}const T=c.findByProps("getMessage","getMessages"),u=c.findByProps("getChannel","getDMFromUserId"),B=c.findByProps("startEditMessage");let r={};function L(e,a){let{[e]:s,...n}=a;return n}const P={onLoad(){this.self=f.before("startEditMessage",B,function(e){let a=`${l.storage.edit_var||"`[ EDITED ]`"}

`;const[s,n,h]=e,S=h.split(a);return e[2]=S[S.length-1],e}),this.messageLogger=f.before("dispatch",t.FluxDispatcher,function(e){const[a]=e;if(a.type==="MESSAGE_DELETE"){if(r[a.id]&&r[a.id].modified==2)return r=L(a.id,r),e;if(r[a.id]&&r[a.id].modified==1)return r[a.id].modified=2,r[a.id].arg;if(!Boolean(l.storage.msg_useDeleted)&&!Boolean(l.storage.msg_normalEphemeral)){if(!a?.id||!a?.channelId)return;let n=l.storage.message?.trim?.()||"This message was deleted";return l.storage.useTimestamps&&(n+=` (${t.moment().format(l.storage.useAMPM?"hh:mm:ss.SS a":"HH:mm:ss.SS")})`),e[0]={type:"MESSAGE_EDIT_FAILED_AUTOMOD",messageData:{type:1,message:{channelId:a.channelId,messageId:a.id}},errorResponseBody:{code:2e5,message:n}},r[a.id]={arg:e,modified:1},e}const s=T.getMessage(e[0].channelId,e[0].id);if(Boolean(l.storage.msg_useDeleted)==!0){let n=l.storage.del_var||"`[ DELETED ]`";return!s?.author?.id||!s?.author?.username||!s?.content&&s?.attachments?.length==0&&s?.embeds?.length==0||(e[0]={type:"MESSAGE_UPDATE",message:{...s,edited_timestamp:"invalid_timestamp",content:`${s?.content} ${n}`,guild_id:u.getChannel(s?.channel_id)?.guild_id}},r[a.id]={arg:e,modified:1}),e}if(Boolean(l.storage.msg_normalEphemeral)==!0)return!s?.author?.id||!s?.author?.username||!s?.content&&s?.attachments?.length==0&&s?.embeds?.length==0||(e[0]={type:"MESSAGE_UPDATE",channelId:s?.channel_id,message:{...s,content:s?.content,type:0,flags:64,channel_id:s?.channel_id,guild_id:u?.getChannel(s?.channel_id)?.guild_id,timestamp:`${new Date().toJSON()}`,state:"SENT"},optimistic:!1,sendMessageOptions:{},isPushNotification:!1},r[a.id]={arg:e,modified:1}),e}if(a.type==="MESSAGE_UPDATE"){let s=`${l.storage.edit_var||"`[ EDITED ]`"}

`;const n=T.getMessage(e[0].message?.channel_id,e[0].message?.id);if(e[0].message?.author?.bot||n?.author?.bot||!n?.author?.id||!n?.author?.username||!n?.content&&n?.attachments?.length==0&&n?.embeds?.length==0||a?.message?.content==n.content)return e;let h=a?.message??n;return e[0]={type:"MESSAGE_UPDATE",message:{...h,content:`${n?.content}  ${s}${a?.message?.content??""}`,guild_id:u.getChannel(n?.channel_id)?.guild_id,edited_timestamp:"invalid_timestamp"}},e}})},onUnload(){this.self?.(),this.messageLogger?.()},settings:I};return g.default=P,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.metro.common,vendetta.storage,vendetta.plugin,vendetta.ui.assets,vendetta.ui.components,vendetta.ui,vendetta.patcher,vendetta.metro);
